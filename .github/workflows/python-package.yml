# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and Build Python Package

on:
  push:
    branches: [ "main", "developer" ]
  pull_request:
    branches: [ "main", "developer" ]

  # Runs this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check --output-format=github .
      continue-on-error: true
    - name: Test with pytest
      run: |
        python -m pip install pytest pytest-cov
        pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov=nodeio --cov-report=xml --cov-report=html
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
          coverage.xml
          htmlcov/
      if: ${{ always() }}
    - name: Build package
      run: |
        pip install build
        python -m build
        
